{"ast":null,"code":"var _s = $RefreshSig$();\n// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\nconst fetchFacebook = (pageId, accessToken, limit) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const url = `https://graph.facebook.com/${pageId}/posts?access_token=${accessToken}&limit=${limit}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        setPosts(data.data);\n        setLoading(false);\n      } catch (err) {\n        setError(true);\n        setErrorMessage(err.message);\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [pageId, accessToken, limit]);\n  return {\n    posts,\n    loading,\n    error,\n    errorMessage\n  };\n};\n_s(fetchFacebook, \"9qrXPlwgiNBzHMm5P381DvuzczI=\");\nexport default fetchFacebook;","map":{"version":3,"names":["useState","useEffect","fetchFacebook","pageId","accessToken","limit","_s","posts","setPosts","loading","setLoading","error","setError","errorMessage","setErrorMessage","fetchPosts","url","response","fetch","data","json","err","message"],"sources":["/Users/sebastien/Sebbe's Cloud/Dev/Projects/Privates/guepes-et-frelons/src/utils/hooks/fetchFacebook.jsx"],"sourcesContent":["// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\n\nconst fetchFacebook = (pageId, accessToken, limit) => {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchPosts = async () => {\n\t\t\ttry {\n\t\t\t\tconst url = `https://graph.facebook.com/${pageId}/posts?access_token=${accessToken}&limit=${limit}`;\n\t\t\t\tconst response = await fetch(url);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPosts(data.data);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (err) {\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(err.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchPosts();\n\t}, [pageId, accessToken, limit]);\n\n\treturn { posts, loading, error, errorMessage };\n};\n\nexport default fetchFacebook;\n"],"mappings":";AAAA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACf,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACH,MAAMC,GAAG,GAAI,8BAA6Bb,MAAO,uBAAsBC,WAAY,UAASC,KAAM,EAAC;QACnG,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAACW,IAAI,CAACA,IAAI,CAAC;QACnBT,UAAU,CAAC,KAAK,CAAC;MAClB,CAAC,CAAC,OAAOW,GAAG,EAAE;QACbT,QAAQ,CAAC,IAAI,CAAC;QACdE,eAAe,CAACO,GAAG,CAACC,OAAO,CAAC;QAC5BZ,UAAU,CAAC,KAAK,CAAC;MAClB;IACD,CAAC;IAEDK,UAAU,CAAC,CAAC;EACb,CAAC,EAAE,CAACZ,MAAM,EAAEC,WAAW,EAAEC,KAAK,CAAC,CAAC;EAEhC,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAa,CAAC;AAC/C,CAAC;AAACP,EAAA,CAzBIJ,aAAa;AA2BnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
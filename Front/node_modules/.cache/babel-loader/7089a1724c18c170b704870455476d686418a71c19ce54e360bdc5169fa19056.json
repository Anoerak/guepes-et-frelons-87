{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable no-undef */\n// We want to generate a Facebook access token that will be used to fetch the posts from the Facebook page.\n// We gonna fetch it using a hook that we will create in the next step.\n\nimport { useState, useEffect } from 'react';\nconst generateFbToken = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [longLiveToken, setLongLiveToken] = useState('');\n  const [longLiveTokenLoading, setLongLiveTokenLoading] = useState(true);\n  const [longLiveTokenError, setLongLiveTokenError] = useState(false);\n  const [longLiveTokenErrorMessage, setLongLiveTokenErrorMessage] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    const fetchToken = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/oauth/access_token?client_id=${process.env.REACT_APP_FACEBOOK_APP_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_APP_SECRET}&grant_type=client_credentials`);\n        const data = await response.json();\n        console.log(data);\n        setToken(data.access_token);\n        console.log('short lived token: ', token);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        setErrorMessage(error.message);\n        setLoading(false);\n      }\n    };\n    fetchToken();\n    const fetchLongLiveToken = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id=${process.env.REACT_APP_FACEBOOK_APP_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_APP_SECRET}&fb_exchange_token=${token}`);\n        const data = await response.json();\n        console.log(data);\n        setLongLiveToken(data.access_token);\n        console.log('long lived token: ', longLiveToken);\n        setLongLiveTokenLoading(false);\n      } catch (error) {\n        setLongLiveTokenError(true);\n        setLongLiveTokenErrorMessage(error.message);\n        setLongLiveTokenLoading(false);\n      }\n    };\n    fetchLongLiveToken();\n  }, []);\n  if (longLiveToken) {\n    return {\n      token: longLiveToken,\n      loading: longLiveTokenLoading,\n      error: longLiveTokenError,\n      errorMessage: longLiveTokenErrorMessage\n    };\n  } else {\n    return {\n      token,\n      loading,\n      error,\n      errorMessage\n    };\n  }\n};\n_s(generateFbToken, \"JuUUdX3FFFPxRaXTKgL1yLfHR8o=\");\nexport default generateFbToken;","map":{"version":3,"names":["useState","useEffect","generateFbToken","_s","token","setToken","loading","setLoading","error","setError","errorMessage","setErrorMessage","longLiveToken","setLongLiveToken","longLiveTokenLoading","setLongLiveTokenLoading","longLiveTokenError","setLongLiveTokenError","longLiveTokenErrorMessage","setLongLiveTokenErrorMessage","fetchToken","response","fetch","process","env","REACT_APP_CORS_ANYWHERE_PROXY","REACT_APP_FACEBOOK_APP_ID","REACT_APP_FACEBOOK_APP_SECRET","data","json","console","log","access_token","message","fetchLongLiveToken"],"sources":["/Users/sebastien/Sebbe's Cloud/Dev/Projects/Privates/guepes-et-frelons/src/utils/hooks/facebook/generateFbToken.jsx"],"sourcesContent":["/* eslint-disable no-undef */\n// We want to generate a Facebook access token that will be used to fetch the posts from the Facebook page.\n// We gonna fetch it using a hook that we will create in the next step.\n\nimport { useState, useEffect } from 'react';\n\nconst generateFbToken = () => {\n\tconst [token, setToken] = useState('');\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tconst [longLiveToken, setLongLiveToken] = useState('');\n\tconst [longLiveTokenLoading, setLongLiveTokenLoading] = useState(true);\n\tconst [longLiveTokenError, setLongLiveTokenError] = useState(false);\n\tconst [longLiveTokenErrorMessage, setLongLiveTokenErrorMessage] = useState('');\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\n\t\tconst fetchToken = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/oauth/access_token?client_id=${process.env.REACT_APP_FACEBOOK_APP_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_APP_SECRET}&grant_type=client_credentials`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetToken(data.access_token);\n\t\t\t\tconsole.log('short lived token: ', token);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\t\tfetchToken();\n\n\t\tconst fetchLongLiveToken = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/oauth/access_token?grant_type=fb_exchange_token&client_id=${process.env.REACT_APP_FACEBOOK_APP_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_APP_SECRET}&fb_exchange_token=${token}`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetLongLiveToken(data.access_token);\n\t\t\t\tconsole.log('long lived token: ', longLiveToken);\n\t\t\t\tsetLongLiveTokenLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tsetLongLiveTokenError(true);\n\t\t\t\tsetLongLiveTokenErrorMessage(error.message);\n\t\t\t\tsetLongLiveTokenLoading(false);\n\t\t\t}\n\t\t};\n\t\tfetchLongLiveToken();\n\t}, []);\n\n\tif (longLiveToken) {\n\t\treturn {\n\t\t\ttoken: longLiveToken,\n\t\t\tloading: longLiveTokenLoading,\n\t\t\terror: longLiveTokenError,\n\t\t\terrorMessage: longLiveTokenErrorMessage,\n\t\t};\n\t} else {\n\t\treturn { token, loading, error, errorMessage };\n\t}\n};\n\nexport default generateFbToken;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
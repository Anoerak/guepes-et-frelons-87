{"ast":null,"code":"var _s2 = $RefreshSig$();\n/* eslint-disable no-undef */\n// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\nconst fetchFacebook = ( /** @type {number} */pageId,\n// /** @type {string} */ accessToken,\n/** @type {number} */\nlimit) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  _s(useEffect(_s(() => {\n    _s();\n    setLoading(true);\n    const [accessToken1, setAccessToken1] = useState('');\n    setAccessToken1('EAADy2ex3R8wBAIQRsiZAs1cNyByErj3yCijU8qd4C0o27ZClOyHJZCWHUYp7DPhKhigShHXzFRZBKIsjH1upUfivLTyCl6cubcRBDkZCD7ZCuoZBeqAYotMd2CQjb3loaBuJeBQOzlPSubIVPCTVOH4TlCjl4G0BFj5YlaeilF8gRXpZCxEvFo2ZCcrNZAlmLlqExhYAgLMHFl8hZAsE5CZCayjpWZCbRVqEihleHBoclzmFyxAZDZD');\n    const fetchPosts = async ( /** @type {number} */pageId, /** @type {string} */accessToken, /** @type {number} */limit) => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/v10.0/${pageId}/posts?access_token=${accessToken1}&limit=${limit}`);\n        const data = await response.json();\n        console.log(data);\n        setPosts(data.data);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        setErrorMessage(error.message);\n        setLoading(false);\n      }\n    };\n    fetchPosts(pageId, accessToken1, limit);\n  }, \"AyOJCudYNB+3w4BhlWlTF7a2peY=\"), [pageId,\n  // accessToken,\n  limit]), \"AyOJCudYNB+3w4BhlWlTF7a2peY=\");\n  return {\n    posts,\n    loading,\n    error,\n    errorMessage\n  };\n};\n_s2(fetchFacebook, \"9qrXPlwgiNBzHMm5P381DvuzczI=\");\nexport default fetchFacebook;","map":{"version":3,"names":["useState","useEffect","fetchFacebook","pageId","limit","_s2","_s","$RefreshSig$","posts","setPosts","loading","setLoading","error","setError","errorMessage","setErrorMessage","accessToken1","setAccessToken1","fetchPosts","accessToken","response","fetch","process","env","REACT_APP_CORS_ANYWHERE_PROXY","data","json","console","log","message"],"sources":["/Users/sebastien/Sebbe's Cloud/Dev/Projects/Privates/guepes-et-frelons/src/utils/hooks/facebook/fetchFacebook.jsx"],"sourcesContent":["/* eslint-disable no-undef */\n// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\n\nconst fetchFacebook = (\n\t/** @type {number} */ pageId,\n\t// /** @type {string} */ accessToken,\n\t/** @type {number} */ limit\n) => {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\n\t\tconst [accessToken1, setAccessToken1] = useState('');\n\t\tsetAccessToken1(\n\t\t\t'EAADy2ex3R8wBAIQRsiZAs1cNyByErj3yCijU8qd4C0o27ZClOyHJZCWHUYp7DPhKhigShHXzFRZBKIsjH1upUfivLTyCl6cubcRBDkZCD7ZCuoZBeqAYotMd2CQjb3loaBuJeBQOzlPSubIVPCTVOH4TlCjl4G0BFj5YlaeilF8gRXpZCxEvFo2ZCcrNZAlmLlqExhYAgLMHFl8hZAsE5CZCayjpWZCbRVqEihleHBoclzmFyxAZDZD'\n\t\t);\n\n\t\tconst fetchPosts = async (\n\t\t\t/** @type {number} */ pageId,\n\t\t\t/** @type {string} */ accessToken,\n\t\t\t/** @type {number} */ limit\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${process.env.REACT_APP_CORS_ANYWHERE_PROXY}https://graph.facebook.com/v10.0/${pageId}/posts?access_token=${accessToken1}&limit=${limit}`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetPosts(data.data);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\t\tfetchPosts(pageId, accessToken1, limit);\n\t}, [\n\t\tpageId,\n\t\t// accessToken,\n\t\tlimit,\n\t]);\n\n\treturn { posts, loading, error, errorMessage };\n};\n\nexport default fetchFacebook;\n"],"mappings":";AAAA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAAA,CACrB,qBAAsBC,MAAM;AAC5B;AACA;AAAsBC,KAAK,KACvB;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDM,EAAA,CAAAL,SAAS,CAAAK,EAAA,CAAC,MAAM;IAAAA,EAAA;IACfK,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;IACpDiB,eAAe,CACd,0PACD,CAAC;IAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,CAClB,qBAAsBf,MAAM,EAC5B,qBAAsBgB,WAAW,EACjC,qBAAsBf,KAAK,KACvB;MACJ,IAAI;QACH,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAEC,OAAO,CAACC,GAAG,CAACC,6BAA8B,oCAAmCrB,MAAO,uBAAsBa,YAAa,UAASZ,KAAM,EAC1I,CAAC;QACD,MAAMqB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBhB,QAAQ,CAACgB,IAAI,CAACA,IAAI,CAAC;QACnBd,UAAU,CAAC,KAAK,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,QAAQ,CAAC,IAAI,CAAC;QACdE,eAAe,CAACH,KAAK,CAACiB,OAAO,CAAC;QAC9BlB,UAAU,CAAC,KAAK,CAAC;MAClB;IACD,CAAC;IACDO,UAAU,CAACf,MAAM,EAAEa,YAAY,EAAEZ,KAAK,CAAC;EACxC,CAAC,mCAAE,CACFD,MAAM;EACN;EACAC,KAAK,CACL,CAAC;EAEF,OAAO;IAAEI,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAa,CAAC;AAC/C,CAAC;AAACT,GAAA,CA7CIH,aAAa;AA+CnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
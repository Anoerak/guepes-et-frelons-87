{"ast":null,"code":"var _s = $RefreshSig$();\n// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\nconst fetchFacebook = ( /** @type {number} */pageId, /** @type {string} */accessToken, /** @type {number} */limit) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // We want to avoid Cross-Origin Resource Sharing (CORS) errors\n  // so we use a proxy to fetch the data\n  const proxyUrl = 'https://sebdevcloud.synology.me:3128/';\n  useEffect(() => {\n    setLoading(true);\n    const fetchPosts = async ( /** @type {number} */pageId, /** @type {string} */accessToken, /** @type {number} */limit) => {\n      try {\n        const response = await fetch(`${proxyUrl}https://graph.facebook.com/v10.0/${pageId}/posts?access_token=${accessToken}&limit=${limit}`);\n        const data = await response.json();\n        console.log(data);\n        setPosts(data.data);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        setErrorMessage(error.message);\n        setLoading(false);\n      }\n    };\n    fetchPosts(pageId, accessToken, limit);\n  }, [pageId, accessToken, limit]);\n  return {\n    posts,\n    loading,\n    error,\n    errorMessage\n  };\n};\n_s(fetchFacebook, \"9qrXPlwgiNBzHMm5P381DvuzczI=\");\nexport default fetchFacebook;","map":{"version":3,"names":["useState","useEffect","fetchFacebook","pageId","accessToken","limit","_s","posts","setPosts","loading","setLoading","error","setError","errorMessage","setErrorMessage","proxyUrl","fetchPosts","response","fetch","data","json","console","log","message"],"sources":["/Users/sebastien/Sebbe's Cloud/Dev/Projects/Privates/guepes-et-frelons/src/utils/hooks/facebook/fetchFacebook.jsx"],"sourcesContent":["// A hook to fetch posts from a facebook page\n// Usage: const { posts, loading, error } = useFacebook('pageId', 'accessToken', 5);\n\nimport { useState, useEffect } from 'react';\n\nconst fetchFacebook = (\n\t/** @type {number} */ pageId,\n\t/** @type {string} */ accessToken,\n\t/** @type {number} */ limit\n) => {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\t// We want to avoid Cross-Origin Resource Sharing (CORS) errors\n\t// so we use a proxy to fetch the data\n\tconst proxyUrl = 'https://sebdevcloud.synology.me:3128/';\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\n\t\tconst fetchPosts = async (\n\t\t\t/** @type {number} */ pageId,\n\t\t\t/** @type {string} */ accessToken,\n\t\t\t/** @type {number} */ limit\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${proxyUrl}https://graph.facebook.com/v10.0/${pageId}/posts?access_token=${accessToken}&limit=${limit}`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetPosts(data.data);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(true);\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\t\tfetchPosts(pageId, accessToken, limit);\n\t}, [pageId, accessToken, limit]);\n\n\treturn { posts, loading, error, errorMessage };\n};\n\nexport default fetchFacebook;\n"],"mappings":";AAAA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAAA,CACrB,qBAAsBC,MAAM,EAC5B,qBAAsBC,WAAW,EACjC,qBAAsBC,KAAK,KACvB;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA;EACA,MAAMe,QAAQ,GAAG,uCAAuC;EAExDd,SAAS,CAAC,MAAM;IACfS,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMM,UAAU,GAAG,MAAAA,CAAA,CAClB,qBAAsBb,MAAM,EAC5B,qBAAsBC,WAAW,EACjC,qBAAsBC,KAAK,KACvB;MACJ,IAAI;QACH,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAEH,QAAS,oCAAmCZ,MAAO,uBAAsBC,WAAY,UAASC,KAAM,EACxG,CAAC;QACD,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBX,QAAQ,CAACW,IAAI,CAACA,IAAI,CAAC;QACnBT,UAAU,CAAC,KAAK,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,QAAQ,CAAC,IAAI,CAAC;QACdE,eAAe,CAACH,KAAK,CAACY,OAAO,CAAC;QAC9Bb,UAAU,CAAC,KAAK,CAAC;MAClB;IACD,CAAC;IACDM,UAAU,CAACb,MAAM,EAAEC,WAAW,EAAEC,KAAK,CAAC;EACvC,CAAC,EAAE,CAACF,MAAM,EAAEC,WAAW,EAAEC,KAAK,CAAC,CAAC;EAEhC,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAa,CAAC;AAC/C,CAAC;AAACP,EAAA,CAxCIJ,aAAa;AA0CnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}